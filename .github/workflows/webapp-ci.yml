name: build_and_deploy

on:
  # すべての push をトリガー（main 以外はビルド/テストのみ、main はデプロイも実行）
  push:
    branches:
      - "**"
    paths:
      - "src/**"
      - "tests/**"
      - "Dockerfile"
      - "docker-compose.yml"
      - ".github/workflows/webapp-ci.yml"

  # main 宛ての PR でビルド/テスト
  pull_request:
    branches: [ main ]
    paths:
      - "src/**"
      - "tests/**"
      - "Dockerfile"
      - "docker-compose.yml"
      - ".github/workflows/webapp-ci.yml"

  # 手動実行（必要に応じて）
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1

permissions:
  contents: read
  id-token: write

jobs:
  build_and_test:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore
        run: dotnet restore ./src/WebApp/WebApp.csproj

      - name: Build
        run: dotnet build ./src/WebApp/WebApp.csproj -c Release --no-restore

      # テストは存在すれば実行（無ければスキップして成功扱い）
      - name: Test
        run: |
          if [ -f ./tests/WebApp.IntegrationTests/WebApp.IntegrationTests.csproj ]; then
            dotnet test ./tests/WebApp.IntegrationTests/WebApp.IntegrationTests.csproj -c Release --no-build
          else
            echo "No test project found. Skipping tests."
          fi

  deploy:
    name: Deploy to Fargate via Copilot
    needs: build_and_test
    runs-on: ubuntu-latest

    # main への push だけデプロイする（PR 作成/更新や feature ブランチでは実行しない）
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    concurrency:
      group: "deploy-test-env"
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image (linux/arm64)
        run: |
          IMAGE="${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/webapp/webapp:latest"
          docker buildx build \
            --platform linux/arm64 \
            -t "$IMAGE" \
            -f ./src/WebApp/Dockerfile ./src/WebApp \
            --push

      - name: Install Copilot CLI
        run: |
          curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux
          chmod +x copilot
          sudo mv copilot /usr/local/bin/copilot
          copilot --version

      - name: Copilot deploy to Fargate
        run: |
          copilot svc deploy \
            --app "${{ secrets.COPILOT_APP }}" \
            --env "${{ secrets.COPILOT_ENV }}" \
            --name "${{ secrets.COPILOT_SERVICE }}" \
            --force

      - name: Output Service URL
        run: |
          copilot svc show -a "${{ secrets.COPILOT_APP }}" -n "${{ secrets.COPILOT_SERVICE }}"
