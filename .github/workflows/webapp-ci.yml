name: Build and Deploy to AWS Fargate

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "README.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/PULL_REQUEST_TEMPLATE.md"
  workflow_dispatch:

concurrency:
  group: webapp-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    # ここで “env” を定義してから、以降の式で参照します
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_ACCOUNT_ID: ${{ secrets.ECR_ACCOUNT_ID }}
      COPILOT_APP: ${{ secrets.COPILOT_APP }}
      COPILOT_ENV: ${{ secrets.COPILOT_ENV }}
      COPILOT_SERVICE: ${{ secrets.COPILOT_SERVICE }}
      IMAGE_REPO: webapp/webapp
      IMAGE_TAG: latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # アクセスキーを使う前提（OIDCでRole Assumeする場合は別設定）
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up QEMU (for ARM builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # .NET のビルドは Docker で行うため省略可。必要なら有効化:
      # - name: Setup .NET SDK 9.0
      #   uses: actions/setup-dotnet@v4
      #   with:
      #     dotnet-version: '9.0.x'

      - name: Build and push image (linux/arm64)
        working-directory: ./src/WebApp
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        run: |
          docker buildx build \
            --platform linux/arm64 \
            --file Dockerfile \
            --tag "${ECR_REGISTRY}/${IMAGE_REPO}:${IMAGE_TAG}" \
            --push \
            .

      - name: Install Copilot CLI
        run: |
          curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux \
          && chmod +x copilot \
          && sudo mv copilot /usr/local/bin/copilot
          copilot --version

      # 既に App/Env/Service は手元で作成済みの想定
      # ここでは “最新イメージ” を引かせるために --force でデプロイ
      - name: Copilot deploy to Fargate
        run: |
          copilot svc deploy \
            --app "${COPILOT_APP}" \
            --name "${COPILOT_SERVICE}" \
            --env "${COPILOT_ENV}" \
            --force

      - name: Output Service URL
        run: |
          copilot svc show -n "${COPILOT_SERVICE}"
