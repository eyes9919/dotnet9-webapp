name: build_and_deploy

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "README.md"
      - "**/*.md"
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_ACCOUNT_ID: ${{ secrets.ECR_ACCOUNT_ID }}
  COPILOT_APP: ${{ secrets.COPILOT_APP }}
  COPILOT_ENV: ${{ secrets.COPILOT_ENV }}
  COPILOT_SERVICE: ${{ secrets.COPILOT_SERVICE }}
  ECR_REPO: webapp/webapp
  IMAGE_TAG: latest

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Post Checkout
        uses: actions/checkout@v4

      - name: Post Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Post Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Post Set up QEMU (for ARM builds)
        uses: docker/setup-qemu-action@v3

      - name: Post Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image (linux/arm64)
        uses: docker/build-push-action@v6
        with:
          context: ./src/WebApp
          file: ./src/WebApp/Dockerfile
          push: true
          platforms: linux/arm64
          tags: |
            ${{ env.ECR_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.IMAGE_TAG }}
          build-args: |
            DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1

      - name: Install Copilot CLI
        run: |
          set -eux
          tmp=/tmp/copilot
          curl -sSL -o "$tmp" https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux
          chmod +x "$tmp"
          sudo mv "$tmp" /usr/local/bin/copilot
          copilot --version

      - name: Copilot deploy to Fargate
        run: |
          set -eux
          copilot svc deploy \
            --app "${COPILOT_APP}" \
            --name "${COPILOT_SERVICE}" \
            --env "${COPILOT_ENV}" \
            --force

      - name: Output Service URL
        run: |
          copilot svc show -n "${COPILOT_SERVICE}" | sed -n '1,120p'
